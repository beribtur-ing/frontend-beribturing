version: '3.8'

services:
  # Renter App - Customer-facing application
  renter-app:
    build:
      context: .
      dockerfile: apps/renter-app/Dockerfile
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    networks:
      - beribturing-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Owner App - Property owner dashboard
  owner-app:
    build:
      context: .
      dockerfile: apps/owner-app/Dockerfile
    ports:
      - "3001:80"
    environment:
      - NODE_ENV=production
    networks:
      - beribturing-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin App - Administrative dashboard
  admin-app:
    build:
      context: .
      dockerfile: apps/admin-app/Dockerfile
    ports:
      - "3002:80"
    environment:
      - NODE_ENV=production
    networks:
      - beribturing-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy (optional - for routing between apps)
  reverse-proxy:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - renter-app
      - owner-app
      - admin-app
    networks:
      - beribturing-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  beribturing-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  nginx-logs:
    driver: local